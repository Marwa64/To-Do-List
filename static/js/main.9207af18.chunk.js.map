{"version":3,"sources":["components/Header.js","components/Button.js","components/Task.js","components/Tasks.js","components/Home.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","color","style","float","onClick","changeMode","Button","id","padding","action","backgroundColor","fontSize","size","text","Task","task","useState","edit","toggleEdit","className","animationDelay","mode","autoComplete","maxLength","type","placeholder","name","readOnly","delete","document","querySelector","value","border","axios","put","focus","Tasks","tasks","map","index","Home","setTasks","useEffect","get","then","res","data","to","length","ids","push","catch","err","console","log","filter","AddTask","history","useHistory","marginTop","taskInput","post","App","bgColor","font","setMode","changeColor","background","title","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9207af18.chunk.js","sourcesContent":["import { FaMoon } from 'react-icons/fa';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <>\r\n      <FaMoon color={props.color} style={{float: 'right'}} onClick={props.changeMode}/>\r\n      <h1> To Do List </h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <span id={props.id} style={{padding: props.padding}}>\r\n      <button onClick={props.action} style={{backgroundColor: props.color, fontSize: props.size}}> {props.text} </button>\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import { FaPencilAlt, FaTrash } from 'react-icons/fa';\r\nimport Button from './Button';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Task = (props) => {\r\n  const id = `id${props.task.id}`;\r\n  const [edit, toggleEdit] = useState(false);\r\n\r\n  const editTask = () => {\r\n    toggleEdit(true);\r\n    let task = document.querySelector(`#${id}`);\r\n    task.focus();\r\n    task.value = props.task.name;\r\n    task.placeholder = '';\r\n    task.style.backgroundColor = 'white';\r\n    task.readOnly = false;\r\n  }\r\n\r\n  const saveEdit = () => {\r\n    let task = document.querySelector(`#${id}`);\r\n    if (task.value === '') {\r\n      task.style.border = '2px solid red';\r\n      task.style.backgroundColor = '#fff1f1';\r\n      return;\r\n    }\r\n    toggleEdit(false);\r\n    task.placeholder = task.value;\r\n    task.style.backgroundColor = 'inherit';\r\n    task.style.border = 'none';\r\n    task.readOnly = true;\r\n    if (task.value !== props.task.name)\r\n      axios.put(`https://my-json-server.typicode.com/marwa64/To-Do-List/${props.task.id}`, {name: task.value});\r\n  }\r\n\r\n  const deleteTask = () => {\r\n    props.delete(props.task.id);\r\n  }\r\n\r\n  const changeBg = () => {\r\n    if (props.mode === 'dark') {\r\n      return '#8c8c8c';\r\n    } else {\r\n      return '#D3D3D3';\r\n    }\r\n  }\r\n  const changeFont = () => {\r\n    if (props.mode === 'dark') {\r\n      return 'white';\r\n    } else {\r\n      return 'black';\r\n    }\r\n  }\r\n  return (\r\n    <div className='task' style={{animationDelay: props.animationDelay + 's', backgroundColor: changeBg(), color: changeFont()}}>\r\n      <span>\r\n        <input autoComplete=\"off\" id={id} maxLength='29' className='taskName' type='text' placeholder={props.task.name} readOnly/>\r\n        <span className='taskIcons'>\r\n          {!edit ? <FaTrash className='trash' onClick={deleteTask} color=\"#E40000\"/> : ''}\r\n          {edit ? <Button text='Save Edit' action={saveEdit} color='#0075E0' padding='25px 0px' size='18px'/> : <FaPencilAlt onClick={editTask} />}\r\n        </span>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import Task from './Task';\r\n\r\nconst Tasks = (props) => {\r\n  let animationDelay = -0.4;\r\n  return (\r\n    <div>\r\n      {props.tasks.map((task, index) => <Task key={index} delete={props.delete} animationDelay={animationDelay+= 0.4} task={task} mode={props.mode}/>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n","import Button from './Button';\r\nimport Tasks from './Tasks';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Home = (props) => {\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  useEffect(() => {\r\n    axios.get('https://my-json-server.typicode.com/marwa64/To-Do-List/tasks')\r\n    .then(res => setTasks(res.data));\r\n  }, [tasks]);\r\n\r\n\r\n  const deleteTask = (id) => {\r\n    axios.delete(`https://my-json-server.typicode.com/marwa64/To-Do-List/${id}`)\r\n      .then(() => setTasks(tasks.filter(task => task.id !== id)))\r\n      .catch(err => console.log(err));\r\n  }\r\n  const deleteAll = () => {\r\n    if (tasks.length > 0) {\r\n      const ids = [];\r\n      tasks.map(task => ids.push(task.id));\r\n      axios.delete(`https://my-json-server.typicode.com/marwa64/To-Do-List/${ids}`)\r\n        .catch(err => console.log(err));\r\n    }\r\n  }\r\n\r\n  const green = '#21AC0F', grey = '#787878';\r\n\r\n  return (\r\n    <>\r\n      <div className='homeButtons'>\r\n        <Link to='/AddTask'> <Button text='Add' color={green} padding='20px'/> </Link>\r\n        <Button action={deleteAll} text='Remove All' color={grey} padding='20px'/>\r\n      </div>\r\n      <div className='tasksContainer'>\r\n        {tasks.length > 0 ? <Tasks delete={deleteTask} mode={props.mode} tasks={tasks}/> : <h2 style={{color: props.color}}> Your to-do list is empty, add a new task now! </h2>}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import Button from './Button';\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nconst AddTask = (props) => {\r\n  let history = useHistory();\r\n  const red = '#CF0000', blue = '#0075E0';\r\n\r\n  const add = () => {\r\n    let taskInput = document.querySelector(\"#taskInput\");\r\n    if (taskInput.value === '') {\r\n      taskInput.style.border = '2px solid red';\r\n      taskInput.style.backgroundColor = '#fff1f1';\r\n      return;\r\n    }\r\n    let task = {name: taskInput.value};\r\n    axios.post('https://my-json-server.typicode.com/marwa64/To-Do-List/tasks', task);\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div style={{marginTop: '140px'}}>\r\n      <form className='center'>\r\n        <div className='form-control'>\r\n          <h2 style={{color: props.color}}> Task Name: </h2>\r\n           <input id=\"taskInput\" type='text' placeholder='Enter Task' maxLength='29'/>\r\n        </div>\r\n      </form>\r\n      <div className='center'>\r\n        <Link to='/'><Button text='Discard' color={red} size='21px'/> </Link>\r\n        <Button action={add} text='Save' color={blue} padding='60px 0px' size='21px' id='save'/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTask;\r\n","import Header from './components/Header';\nimport Home from './components/Home';\nimport AddTask from './components/AddTask';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n\n  let bgColor, font;\n  const changeMode = () => {\n    let background = document.querySelector(\"html\");\n    let title = document.querySelector(\"h1\");\n\n    if (mode === 'dark') {\n      bgColor = '#F3F3F3';\n      font = 'black';\n      setMode('light');\n    } else {\n      bgColor = '#1f1f1f';\n      font = 'white';\n      setMode('dark');\n    }\n\n    background.style.backgroundColor = bgColor;\n    title.style.color = font;\n  }\n  const changeColor = () => {\n    if (mode === 'dark'){\n      return 'white';\n    }\n    return 'black';\n  }\n\n  return (\n    <div>\n      <Header changeMode={changeMode} color={changeColor()}/>\n      <Router>\n        <Switch>\n          <Route path='/AddTask'>\n            <AddTask color={changeColor()}/>\n          </Route>\n          <Route path='/'>\n            <Home color={changeColor()} mode={mode}/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}